{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/platform-browser/fesm2022/animations/async.mjs"],
  "sourcesContent": ["/**\n * @license Angular v17.0.9\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { ɵRuntimeError, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\n\nconst ANIMATION_PREFIX = '@';\nclass AsyncAnimationRendererFactory {\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n        this.doc = doc;\n        this.delegate = delegate;\n        this.zone = zone;\n        this.animationType = animationType;\n        this.moduleImpl = moduleImpl;\n        this._rendererFactoryPromise = null;\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n        const moduleImpl = this.moduleImpl ?? import('@angular/animations/browser');\n        return moduleImpl\n            .catch((e) => {\n            throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Async loading for animations package was ' +\n                    'enabled, but loading failed. Angular falls back to using regular rendering. ' +\n                    'No animations will be displayed and their styles won\\'t be applied.');\n        })\n            .then(({ ɵcreateEngine, ɵAnimationRendererFactory }) => {\n            // We can't create the renderer yet because we might need the hostElement and the type\n            // Both are provided in createRenderer().\n            const engine = ɵcreateEngine(this.animationType, this.doc);\n            const rendererFactory = new ɵAnimationRendererFactory(this.delegate, engine, this.zone);\n            this.delegate = rendererFactory;\n            return rendererFactory;\n        });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n        const renderer = this.delegate.createRenderer(hostElement, rendererType);\n        if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n            // The factory is already loaded, this is an animation renderer\n            return renderer;\n        }\n        // We need to prevent the DomRenderer to throw an error because of synthetic properties\n        if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n            renderer.throwOnSyntheticProps = false;\n        }\n        // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n        const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n        // Kick off the module loading if the component uses animations but the module hasn't been\n        // loaded yet.\n        if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n            this._rendererFactoryPromise = this.loadImpl();\n        }\n        this._rendererFactoryPromise\n            ?.then((animationRendererFactory) => {\n            const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n            dynamicRenderer.use(animationRenderer);\n        })\n            .catch(e => {\n            // Permanently use regular renderer when loading fails.\n            dynamicRenderer.use(renderer);\n        });\n        return dynamicRenderer;\n    }\n    begin() {\n        this.delegate.begin?.();\n    }\n    end() {\n        this.delegate.end?.();\n    }\n    whenRenderingDone() {\n        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n}\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n    constructor(delegate) {\n        this.delegate = delegate;\n        // List of callbacks that need to be replayed on the animation renderer once its loaded\n        this.replay = [];\n        this.ɵtype = 1 /* AnimationRendererType.Delegated */;\n    }\n    use(impl) {\n        this.delegate = impl;\n        if (this.replay !== null) {\n            // Replay queued actions using the animation renderer to apply\n            // all events and properties collected while loading was in progress.\n            for (const fn of this.replay) {\n                fn(impl);\n            }\n            // Set to `null` to indicate that the queue was processed\n            // and we no longer need to collect events and properties.\n            this.replay = null;\n        }\n    }\n    get data() {\n        return this.delegate.data;\n    }\n    destroy() {\n        this.replay = null;\n        this.delegate.destroy();\n    }\n    createElement(name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    }\n    createComment(value) {\n        return this.delegate.createComment(value);\n    }\n    createText(value) {\n        return this.delegate.createText(value);\n    }\n    get destroyNode() {\n        return this.delegate.destroyNode;\n    }\n    appendChild(parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n    }\n    insertBefore(parent, newChild, refChild, isMove) {\n        this.delegate.insertBefore(parent, newChild, refChild, isMove);\n    }\n    removeChild(parent, oldChild, isHostElement) {\n        this.delegate.removeChild(parent, oldChild, isHostElement);\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    }\n    parentNode(node) {\n        return this.delegate.parentNode(node);\n    }\n    nextSibling(node) {\n        return this.delegate.nextSibling(node);\n    }\n    setAttribute(el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    removeAttribute(el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    addClass(el, name) {\n        this.delegate.addClass(el, name);\n    }\n    removeClass(el, name) {\n        this.delegate.removeClass(el, name);\n    }\n    setStyle(el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    removeStyle(el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    }\n    setProperty(el, name, value) {\n        // We need to keep track of animation properties set on default renderer\n        // So we can also set them also on the animation renderer\n        if (this.shouldReplay(name)) {\n            this.replay.push((renderer) => renderer.setProperty(el, name, value));\n        }\n        this.delegate.setProperty(el, name, value);\n    }\n    setValue(node, value) {\n        this.delegate.setValue(node, value);\n    }\n    listen(target, eventName, callback) {\n        // We need to keep track of animation events registred by the default renderer\n        // So we can also register them against the animation renderer\n        if (this.shouldReplay(eventName)) {\n            this.replay.push((renderer) => renderer.listen(target, eventName, callback));\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n    shouldReplay(propOrEventName) {\n        //`null` indicates that we no longer need to collect events and properties\n        return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n    }\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * renderered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideAnimationsAsync(type = 'animations') {\n    return makeEnvironmentProviders([\n        {\n            provide: RendererFactory2,\n            useFactory: (doc, renderer, zone) => {\n                return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n            },\n            deps: [DOCUMENT, ɵDomRendererFactory2, NgZone],\n        },\n        {\n            provide: ANIMATION_MODULE_TYPE,\n            useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations',\n        },\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n\n"],
  "mappings": "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",
  "names": []
}
